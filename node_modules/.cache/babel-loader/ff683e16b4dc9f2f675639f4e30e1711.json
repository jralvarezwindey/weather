{"ast":null,"code":"var _jsxFileName = \"/home/jralvarezwindey/henry/FT-M2/08-React-Estado-LifeCycle/homework/src/App.js\",\n    _s = $RefreshSig$();\n\n// Cards component stores each weather card.\n// Nav component manages navigation bar.\nimport React, { useState } from 'react';\nimport './App.css';\nimport Cards from './components/Cards.jsx';\nimport Nav from './components/Nav.jsx';\nimport data, { Cairns } from './data.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n\n  function searchCity(city) {\n    const apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`).then(data => data.json()).then(resource => {\n      if (resource.main !== undefined) {\n        setCities([...cities, resource]); // const ciudad = {\n        // min: Math.round(recurso.main.temp_min),\n        // max: Math.round(recurso.main.temp_max),\n        // img: recurso.weather[0].icon,\n        // id: recurso.id,\n        // wind: recurso.wind.speed,\n        // temp: recurso.main.temp,\n        // name: recurso.name,\n        // weather: recurso.weather[0].main,\n        // clouds: recurso.clouds.all,\n        // latitud: recurso.coord.lat,\n        // longitud: recurso.coord.lon\n        // };\n        // setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n    const exampleCity = {\n      min: 32,\n      max: 35,\n      img: \"03n\",\n      id: 2172797,\n      wind: 3.6,\n      temp: 300.15,\n      name: \"Cairns\",\n      weather: \"Clouds\",\n      clouds: 40,\n      latitud: -16.92,\n      longitud: 145.77\n    }; // setCities(oldCities => [...oldCities, exampleCity]);\n  }\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id != id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      searchCity: searchCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      cities: cities,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\nexport default App; // import React from 'react';\n// import './App.css';\n// import Card from './components/Card.jsx';\n// import Cards from './components/Cards.jsx';\n// import Nav from './components/Nav.jsx'\n// import data, { Cairns } from './data.js';\n//\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <div>\n//         <Nav />\n//       </div>\n//       <div>\n//         <Card\n//           max={Cairns.main.temp_max}\n//           min={Cairns.main.temp_min}\n//           name={Cairns.name}\n//           img={Cairns.weather[0].icon}\n//           onClose={() => alert(Cairns.name)}\n//         />\n//       </div>\n//       <hr />\n//       <div>\n//         <Cards\n//           cities={data}\n//         />\n//       </div>\n//       <hr />\n//     </div>\n//   );\n// }\n//\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jralvarezwindey/henry/FT-M2/08-React-Estado-LifeCycle/homework/src/App.js"],"names":["React","useState","Cards","Nav","data","Cairns","App","cities","setCities","searchCity","city","apiKey","fetch","then","json","resource","main","undefined","alert","exampleCity","min","max","img","id","wind","temp","name","weather","clouds","latitud","longitud","onClose","oldCities","filter","c"],"mappings":";;;AAAA;AACA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,IAAP,IAAcC,MAAd,QAA2B,WAA3B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASQ,UAAT,CAAoBC,IAApB,EAA0B;AACxB,UAAMC,MAAM,GAAC,kCAAb;AACAC,IAAAA,KAAK,CAAE,oDAAmDF,IAAK,UAASC,MAAO,eAA1E,CAAL,CACGE,IADH,CACQT,IAAI,IAAIA,IAAI,CAACU,IAAL,EADhB,EAEGD,IAFH,CAESE,QAAD,IAAc;AAClB,UAAGA,QAAQ,CAACC,IAAT,KAAkBC,SAArB,EAA+B;AAC7BT,QAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAWQ,QAAX,CAAD,CAAT,CAD6B,CAE7B;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACA;AACD,OAhBD,MAgBO;AACLG,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,KAtBH;AAwBA,UAAMC,WAAW,GAAG;AAClBC,MAAAA,GAAG,EAAE,EADa;AAElBC,MAAAA,GAAG,EAAE,EAFa;AAGlBC,MAAAA,GAAG,EAAE,KAHa;AAIlBC,MAAAA,EAAE,EAAE,OAJc;AAKlBC,MAAAA,IAAI,EAAE,GALY;AAMlBC,MAAAA,IAAI,EAAE,MANY;AAOlBC,MAAAA,IAAI,EAAE,QAPY;AAQlBC,MAAAA,OAAO,EAAE,QARS;AASlBC,MAAAA,MAAM,EAAE,EATU;AAUlBC,MAAAA,OAAO,EAAE,CAAC,KAVQ;AAWlBC,MAAAA,QAAQ,EAAE;AAXQ,KAApB,CA1BwB,CAwCxB;AACD;;AAED,WAASC,OAAT,CAAiBR,EAAjB,EAAqB;AACjBf,IAAAA,SAAS,CAACwB,SAAS,IAAIA,SAAS,CAACC,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAACX,EAAF,IAAQA,EAA9B,CAAd,CAAT;AACH;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,UAAU,EAAEd;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEF,MAAf;AAAuB,MAAA,OAAO,EAAEwB;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAzDQzB,G;;KAAAA,G;AA2DT,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// Cards component stores each weather card.\n// Nav component manages navigation bar.\nimport React, {useState} from 'react';\nimport './App.css';\nimport Cards from './components/Cards.jsx';\nimport Nav from './components/Nav.jsx'\nimport data, {Cairns} from './data.js';\n\nfunction App() {\n\n  const [cities, setCities] = useState([])\n\n  function searchCity(city) {\n    const apiKey='4ae2636d8dfbdc3044bede63951a019b'\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`)\n      .then(data => data.json())\n      .then((resource) => {\n        if(resource.main !== undefined){\n          setCities([...cities,resource])\n          // const ciudad = {\n            // min: Math.round(recurso.main.temp_min),\n            // max: Math.round(recurso.main.temp_max),\n            // img: recurso.weather[0].icon,\n            // id: recurso.id,\n            // wind: recurso.wind.speed,\n            // temp: recurso.main.temp,\n            // name: recurso.name,\n            // weather: recurso.weather[0].main,\n            // clouds: recurso.clouds.all,\n            // latitud: recurso.coord.lat,\n            // longitud: recurso.coord.lon\n          // };\n          // setCities(oldCities => [...oldCities, ciudad]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n\n    const exampleCity = {\n      min: 32,\n      max: 35,\n      img: \"03n\",\n      id: 2172797,\n      wind: 3.6,\n      temp: 300.15,\n      name: \"Cairns\",\n      weather: \"Clouds\",\n      clouds: 40,\n      latitud: -16.92,\n      longitud: 145.77\n    }\n\n    // setCities(oldCities => [...oldCities, exampleCity]);\n  }\n\n  function onClose(id) {\n      setCities(oldCities => oldCities.filter(c => c.id != id));\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav searchCity={searchCity}/>\n      <Cards cities={cities} onClose={onClose}/>\n    </div>\n  );\n}\n\nexport default App;\n\n// import React from 'react';\n// import './App.css';\n// import Card from './components/Card.jsx';\n// import Cards from './components/Cards.jsx';\n// import Nav from './components/Nav.jsx'\n// import data, { Cairns } from './data.js';\n//\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <div>\n//         <Nav />\n//       </div>\n//       <div>\n//         <Card\n//           max={Cairns.main.temp_max}\n//           min={Cairns.main.temp_min}\n//           name={Cairns.name}\n//           img={Cairns.weather[0].icon}\n//           onClose={() => alert(Cairns.name)}\n//         />\n//       </div>\n//       <hr />\n//       <div>\n//         <Cards\n//           cities={data}\n//         />\n//       </div>\n//       <hr />\n//     </div>\n//   );\n// }\n//\n// export default App;\n"]},"metadata":{},"sourceType":"module"}