{"ast":null,"code":"var _jsxFileName = \"/home/jralvarezwindey/Escritorio/weather/src/components/City.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams, NavLink } from 'react-router-dom';\nimport { card, name, button, weatherImage, details } from './City.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction City(props) {\n  _s();\n\n  const params = useParams();\n  const city = props.cities.filter(city => city.id === Number(params.id))[0];\n  if (city === undefined) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'white',\n      fontSize: '20pt',\n      textAlign: 'left',\n      margin: '20px'\n    },\n    children: \"404 ERROR: CITY NOT FOUND.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: card,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: button,\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" X \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: name,\n      children: city.name.length > 26 ? city.name.slice(0, 26) + '...' : city.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://openweathermap.org/img/wn/${city.img}@2x.png`,\n      alt: \"weather\",\n      className: weatherImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: details,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" Temperature:  \", Math.round(city.temperature), \"\\xB0C \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" Weather: \", city.weather, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" Wind: \", city.wind, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" Amount of clouds: \", city.clouds, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" Latitude: \", city.latitude, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" Longitude: \", city.longitude, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(City, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = City;\nexport default City;\n\nvar _c;\n\n$RefreshReg$(_c, \"City\");","map":{"version":3,"sources":["/home/jralvarezwindey/Escritorio/weather/src/components/City.jsx"],"names":["React","useParams","NavLink","card","name","button","weatherImage","details","City","props","params","city","cities","filter","id","Number","undefined","color","fontSize","textAlign","margin","length","slice","img","Math","round","temperature","weather","wind","clouds","latitude","longitude"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,OAAnB,QAAiC,kBAAjC;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,YAA5B,EAA0CC,OAA1C,QAAwD,mBAAxD;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAMU,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaC,MAAb,CAAoBF,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYC,MAAM,CAACL,MAAM,CAACI,EAAR,CAA9C,EAA2D,CAA3D,CAAb;AAEA,MAAIH,IAAI,KAAKK,SAAb,EAAwB,oBACtB;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,OAAR;AAAiBC,MAAAA,QAAQ,EAAE,MAA3B;AAAmCC,MAAAA,SAAS,EAAE,MAA9C;AAAsDC,MAAAA,MAAM,EAAE;AAA9D,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADsB,CAAxB,KAMK,oBACH;AAAK,IAAA,SAAS,EAAEjB,IAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEE,MAAhB;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,GAAZ;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAI,MAAA,SAAS,EAAED,IAAf;AAAA,gBAAsBO,IAAI,CAACP,IAAL,CAAUiB,MAAV,GAAmB,EAAnB,GAAwBV,IAAI,CAACP,IAAL,CAAUkB,KAAV,CAAgB,CAAhB,EAAkB,EAAlB,IAAwB,KAAhD,GAAwDX,IAAI,CAACP;AAAnF;AAAA;AAAA;AAAA;AAAA,YAPF,eASE;AAAK,MAAA,GAAG,EAAG,oCAAmCO,IAAI,CAACY,GAAI,SAAvD;AACE,MAAA,GAAG,EAAC,SADN;AAEE,MAAA,SAAS,EAAEjB;AAFb;AAAA;AAAA;AAAA;AAAA,YATF,eAaE;AAAI,MAAA,SAAS,EAAEC,OAAf;AAAA,8BACE;AAAA,sCAAoBiB,IAAI,CAACC,KAAL,CAAWd,IAAI,CAACe,WAAhB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,iCAAef,IAAI,CAACgB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,8BAAYhB,IAAI,CAACiB,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,0CAAwBjB,IAAI,CAACkB,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,kCAAgBlB,IAAI,CAACmB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,mCAAiBnB,IAAI,CAACoB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADG;AAwBN;;GAlCQvB,I;UACQP,S;;;KADRO,I;AAoCT,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport {useParams, NavLink} from 'react-router-dom'\nimport {card, name, button, weatherImage, details} from './City.module.css'\n\nfunction City(props) {\n  const params = useParams()\n  const city = props.cities.filter(city => city.id === Number(params.id))[0]\n\n  if (city === undefined) return (\n    <div style={{color: 'white', fontSize: '20pt', textAlign: 'left', margin: '20px'}}>\n      404 ERROR: CITY NOT FOUND.\n    </div>  \n  )\n\n  else return (\n    <div className={card}>\n      <div className={button}>\n        <NavLink to='/'>\n          <button > X </button>  \n        </NavLink>\n      </div>\n\n      <h2 className={name}>{city.name.length > 26 ? city.name.slice(0,26) + '...' : city.name}</h2>\n\n      <img src={`http://openweathermap.org/img/wn/${city.img}@2x.png`}\n        alt=\"weather\"\n        className={weatherImage}/>\n\n      <ul className={details}>\n        <li> Temperature:  {Math.round(city.temperature)}Â°C </li>\n        <li> Weather: {city.weather} </li>\n        <li> Wind: {city.wind} </li>\n        <li> Amount of clouds: {city.clouds} </li>\n        <li> Latitude: {city.latitude} </li>\n        <li> Longitude: {city.longitude} </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default City;\n"]},"metadata":{},"sourceType":"module"}