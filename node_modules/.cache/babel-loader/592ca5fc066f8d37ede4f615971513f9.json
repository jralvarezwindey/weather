{"ast":null,"code":"var _jsxFileName = \"/home/jralvarezwindey/henry/FT-M2/08-React-Estado-LifeCycle/homework/src/App.js\",\n    _s = $RefreshSig$();\n\n// Cards component stores each weather card.\n// Nav component manages navigation bar.\nimport React, { useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Cards from './components/Cards.jsx';\nimport Nav from './components/Nav.jsx';\nimport About from './components/About';\nimport City from './components/City';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n\n  function searchCity(cityName) {\n    const apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}&units=metric`).then(data => data.json()).then(cityData => {\n      if (cityData.main !== undefined) {\n        const city = {\n          name: cityData.name,\n          temperature: cityData.main.temp,\n          min: cityData.main.temp_min,\n          max: cityData.main.temp_max,\n          img: cityData.weather[0].icon,\n          id: cityData.id,\n          weather: cityData.weather[0].main,\n          wind: cityData.wind.speed,\n          clouds: cityData.clouds.all,\n          latitude: cityData.coord.lat,\n          longitude: cityData.coord.lon\n        };\n        setCities([...cities, city]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  function onClose(id) {\n    setCities(cities.filter(city => city.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        searchCity: searchCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        cities: cities,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/about\",\n      children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/city/:id\",\n      render: ({\n        match\n      }) => /*#__PURE__*/_jsxDEV(City, {\n        city: cities.filter(city => city.id === Number(match.params.id))[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jralvarezwindey/henry/FT-M2/08-React-Estado-LifeCycle/homework/src/App.js"],"names":["React","useState","Route","Cards","Nav","About","City","App","cities","setCities","searchCity","cityName","apiKey","fetch","then","data","json","cityData","main","undefined","city","name","temperature","temp","min","temp_min","max","temp_max","img","weather","icon","id","wind","speed","clouds","all","latitude","coord","lat","longitude","lon","alert","onClose","filter","match","Number","params"],"mappings":"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","sourcesContent":["// Cards component stores each weather card.\n// Nav component manages navigation bar.\nimport React, {useState} from 'react';\nimport {Route} from 'react-router-dom';\nimport './App.css';\nimport Cards from './components/Cards.jsx';\nimport Nav from './components/Nav.jsx'\nimport About from './components/About'\nimport City from './components/City';\n\nfunction App() {\n\n  const [cities, setCities] = useState([])\n\n  function searchCity(cityName) {\n    const apiKey='4ae2636d8dfbdc3044bede63951a019b'\n\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}&units=metric`)\n      .then(data => data.json())\n      .then((cityData) => {\n        if (cityData.main !== undefined){\n          const city = {\n            name: cityData.name,\n            temperature: cityData.main.temp,\n            min: cityData.main.temp_min,\n            max: cityData.main.temp_max,\n            img: cityData.weather[0].icon,\n            id: cityData.id,\n            weather: cityData.weather[0].main,\n            wind: cityData.wind.speed,\n            clouds: cityData.clouds.all,\n            latitude: cityData.coord.lat,\n            longitude: cityData.coord.lon\n          }\n\n          setCities([...cities,city]);\n\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n  }\n\n  function onClose(id) {\n    setCities(cities.filter(city => city.id !== id))\n  }\n\n  return (\n    <div className='App'>\n      <Route path='/'>\n        <Nav searchCity={searchCity}/>\n      </Route>\n\n      <Route exact path='/'>\n        <Cards cities={cities} onClose={onClose}/>\n      </Route>\n\n      <Route path='/about'>\n        <About/>\n      </Route>\n\n      <Route \n        exact path='/city/:id'\n        render={({match}) => <City\n          city={cities.filter(city => city.id === Number(match.params.id))[0]}\n        />}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}